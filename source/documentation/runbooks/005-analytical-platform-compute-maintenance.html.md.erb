---
owner_slack: "#analytical-platform-notifications"
title: Analytical Platform Compute Maintenance
last_reviewed_on: 2024-10-28
review_in: 3 months
---

# <%= current_page.data.title %>

On the first day of the month the workflow [schedule-issue-compute-infrastructure.yml](https://github.com/ministryofjustice/analytical-platform/blob/bba07f4908b443a2c15bf94738c8b84c5211e9f9/.github/workflows/schedule-issue-compute-infrastructure.yml) will automatically raise a ticket for example [Maintenance - Analytical Platform Compute ](https://github.com/ministryofjustice/analytical-platform/issues/5661).

This maintenance ticket includes EKS Cluster Upgrade if applicable and/or patching to ensure all components are up to date.

##  Check for new release

Check if a new release of Amazon EKS has been made available [here](https://docs.aws.amazon.com/eks/latest/userguide/kubernetes-versions.html#kubernetes-release-calendar).

Upgrade EKS if there is a new release, additionally patch all components and add-ons; if there is no new EKS release, simply patch all components and add-ons.

## The Approach

1. Create a new branch / Pull Request.
1. Make changes to the code.
1. Create a Pull Request and check the plan.
1. Request approval and merge the Pull Request.

### Order

Apply in the Development, Test and Production environments, resolving any issues before progressing to the next.

## Working on Analytical Platform Compute in Modernisation platform

Be aware that due to restrictions with the state file multiple people cannot work on the environment at once. Terraform plan is fine but once you have carried out a local apply the state file cannot be used by anyone until the changes are merged.

Make the team aware and check before starting the work to avoid conflicts.

## Assumptions

- You are operating in the `modernisation-platform-environments` repository Development Container.
- To interrogate the cluster, you are exec'd into the same account as the cluster you are operating on `aws-sso exec --profile analytical-platform-compute-test:modernisation-platform-developer`.
- Use account `modernisation-platform-developer` for Test and Production and `modernisation-platform-sandbox` for Development.
- If necessary update `~/kube/config` as follows `aws eks update-kubeconfig --region eu-west-2 --name analytical-platform-compute-test`.
- Set context as follows  `kubectl config use-context arn:aws:eks:eu-west-2:767397661611:cluster/analytical-platform-compute-test`.

**Note:** amend above appropriately for the environment you are working in.

## Impact on Users

As this is a live service there could be an impact on users so this will have to be taken into consideration when planning the work.

The impact on users depends on what is planned to be upgraded/patched.

### For Example

If upgrading `cloudwatch logs` agent, the user impact is minimal, applications will run, logs might be delayed and you will not require a maintenance window.

If upgrading [karpenter](https://karpenter.sh/), the user impact is potentially higher because jobs might not schedule as expected so you will have to agree when to schedule a maintenance window.

### Schedule a Maintenance Window

To schedule a maintenance window go to [Pagerduty Maintenance Page](https://moj-digital-tools.pagerduty.com/external-status-dashboard/P1E3FLK/maintenance?tab=ongoing) and use the `Post Maintenance` button.

## Example Pull Requests

- [Upgrade Pull Request](https://github.com/ministryofjustice/analytical-platform/pull/5795)

- [Patching Pull Request](https://github.com/ministryofjustice/modernisation-platform-environments/pull/7548)

##  Upgrade the EKS Control Plane

1. Update the `eks_cluster_version` to the new version in `terraform/environments/analytical-platform-compute/environment-configuration.tf`.
1. Commit and push your results to the branch.
1. Check the Terraform plan.
1. If plan as expected request approval of the Pull Request.

##  Upgrade the EKS Nodes

1. Check the `eks_node_version` from `environment-configuration.tf` against the bottlerocket [changelog](https://github.com/bottlerocket-os/bottlerocket/blob/develop/CHANGELOG.md) to see if a new version is available.
1. If so the `eks_node_version` is formed from `'${BOTTLEROCKET_OS_RELEASE}-${FIRST_EIGHT_CHARACTERS_OF_RELEASE_SHA}'` i.e  [12.5.0](https://github.com/bottlerocket-os/bottlerocket/releases/tag/v1.25.0)-[388e1050](https://github.com/bottlerocket-os/bottlerocket/commit/388e1050a669dd2544007f2af336832b68fa0d64).
Tip: Look at the commit URL for example `https://github.com/bottlerocket-os/bottlerocket/commit/388e1050a669dd2544007f2af336832b68fa0d64` and copy the first eight characters of the sha in this case `388e1050`.
1. Update `eks_node_version` in `environment-configuration.tf` with the value from above.
1. Commit and push your results to the branch.
1. Check the Terraform plan.
1. If the plan upgrades the nodes as expected request approval of the Pull Request.


##  Upgrade the EKS add-ons

1. Run the following command and interpret the results to understand what version the add-ons should be upgraded to: `aws eks describe-addon-versions` Output to a text file (`> file.txt`) if you want to interpret the content more easily.
1. Edit the appropriate values in the `eks_cluster_addon_version` block in the `terraform/environments/analytical-platform-compute/environment-configuration.tf`.
1. Commit and push your results to the branch.
1. Check the Terraform plan.
1. If plan as expected request approval of the Pull Request.

Source:[Describe EKS Add-on versions](https://docs.aws.amazon.com/cli/latest/reference/eks/describe-addon-versions.html)

## Patch Terraform modules

Patching is a manual process. This means you will have to check each module in each file as follows.

1. Open each `.tf` file in the `terraform/environments/analytical-platform-compute` directory.
1. Check each module i.e `source  = "terraform-aws-modules/eks/aws//modules/karpenter"` in `eks-custer.tf` and `cmd + click`` to follow the link.
1. Amend the version if appropriate.
1. Commit and push your results to the branch.
1. Check the Terraform plan.
1. Repeat for each module.
1. If the complete plan is as expected request approval of the Pull Request.
