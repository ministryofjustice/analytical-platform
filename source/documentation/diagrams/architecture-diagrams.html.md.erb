# Analytical Platform Architectural Diagrams

This page documents the technical architecture diagrams that make up the Analytical Platform. If you would like to contribute please see the [contributing and updating](#contributing-and-updating) guidance at the bottom of this page.

## C4 Model Diagrams

In the [C4 model](https://c4model.com/), the four C's represent [context](https://c4model.com/#SystemContextDiagram), [containers](https://c4model.com/#ContainerDiagram), [components](https://c4model.com/#ComponentDiagram), and [code](https://c4model.com/#CodeDiagram). These different levels help tell the right story, to the right audience. These diagrams are for people inside and outside of the the Analytical Platform team and are for technical and non-technical people.

### Level 1 - Context Diagram

This is the highest level of abstraction and provides an overview of the entire system. It shows the system under consideration and its external dependencies, such as users, external systems, and APIs.

We are asking the following questions about the system context.

- What is the scope of the software system we are building?
- Who is using it and what are they doing?
- What system integrations does it need to support?

#### Level 1 - Analytical Platform Context Diagram - Current

![Level 1 Diagram](c4-model-level1.excalidraw.png)

### Level 2 - Container Diagram

This level focuses on the software system's high-level [containers](https://c4model.com/#ContainerDiagram), which are typically applications or services. It illustrates the major components of the system and their interactions. Web servers, databases, desktop and mobile applications are all examples of containers.

![Level 2 Diagram](c4-model-level2.excalidraw.png)

#### Level 2 - Analytical Platform Container - Future

![Level 2 Container Diagram](c4-model-level2-future.excalidraw.png)

## Contributing and updating

We created these diagrams using the open source tool [Excalidraw](https://docs.excalidraw.com/). The files have `.png` appended onto the filename, e.g `diagram.excalidraw.png`. This allows the editors below to manipulate and version the files without the need to export after every change.

If you would like to edit Excalidraw files, then use one of the following methods.

- On the web using [vscode.dev](https://github.dev/ministryofjustice/analytical-platform/tree/main/docs/diagrams) with the [Excalidraw extenstion](https://marketplace.visualstudio.com/items?itemName=pomdtr.excalidraw-editor)

> Recommended for small changes, requires no software.

- Using [Visual Studio Code](https://code.visualstudio.com/download) with the [Excalidraw extension](https://marketplace.visualstudio.com/items?itemName=pomdtr.excalidraw-editor)

> Recommended for creating diagrams.

- Using the web version of [Excalidraw](https://excalidraw.com/) and opening the the cloned, or downloaded [files](https://github.com/ministryofjustice/analytical-platform/tree/main/source/documentation/diagrams)

> Recommended for small group sessions using [live collaboration](https://blog.excalidraw.com/building-excalidraw-p2p-collaboration-feature/)
