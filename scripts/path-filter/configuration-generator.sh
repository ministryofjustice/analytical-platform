#!/usr/bin/env bash

MODE="${1}"
PATH_FILTER_CONFIGURATION_FILE=".github/path-filter/${MODE}.yml"

case ${MODE} in
  terraform)
    SEARCH_PATTERN=".terraform.lock.hcl"
    SKIP_FILE=".terraform-path-filter-ignore"
  ;;
  *)
    echo "Usage: ${0} [containers|terraform|pytest]"
    exit 1
  ;;
esac

mkdir --parents ".github/path-filter"
touch "${PATH_FILTER_CONFIGURATION_FILE}"

if [[ "${MODE}" == "pytest" ]]; then
  folders=$(find . -type f -wholename "${SEARCH_PATTERN}" | sed 's|/tests/.*$||g' | sort -h | uniq | cut -c 3-)
else
  folders=$(find . -type f -name "${SEARCH_PATTERN}" -exec dirname {} \; | sort -h | uniq | cut -c 3-)
fi

export folders

echo "=== Folders ==="
echo "${folders}"

echo "Generating ${PATH_FILTER_CONFIGURATION_FILE}"
cat >"${PATH_FILTER_CONFIGURATION_FILE}" <<EOL
---
# This file is auto-generated by running the below command, do not manually amend.
# bash scripts/path-filter/configuration-generator.sh ${MODE}

EOL

for folder in ${folders}; do

  if [[ -f "${folder}/${SKIP_FILE}" ]]; then
    echo "Ignoring ${folder}"
    continue
  fi

  if [[ "${MODE}" == "terraform" ]]; then
    baseName=$(echo "${folder}" | sed 's|/|-|g' | sed 's|terraform-||')
  else
    baseName=$(basename "${folder}")
  fi

  printf "${baseName}: ${folder}/**\n" >>"${PATH_FILTER_CONFIGURATION_FILE}"
done
