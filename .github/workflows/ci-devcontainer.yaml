---
name: Development Container CI

on:
  pull_request:
    branches:
      - main
    paths:
      - .devcontainer/**

permissions: read-all      

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      features: ${{ steps.changes.outputs.changes }}
    steps:
      - name: "Checkout"
        id: checkout
        uses: actions/checkout@v3

      - name: "Detect changes"
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: .github/workflows/path-filter/devcontainer.yaml

  test:
    needs: [detect-changes]
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        feature: ${{ fromJson(needs.detect-changes.outputs.features) }}
    steps:
      - name: "Checkout"
        id: checkout
        uses: actions/checkout@v3

      - name: "Install devcontainer CLI"
        id: install_devcontainer_cli
        run: npm install -g @devcontainers/cli

      - name: "Build Image"
        id: build_image
        uses: docker/build-push-action@v4
        with:
          file: .devcontainer/features/test/Dockerfile
          load: true
          tags: devcontainer

      - name: DEBUG
        id: debug
        run: |
          docker run -it --rm \
            --volume $( pwd ):/workspace \
            --volume $( pwd )/.devcontainer/features/src/base/devcontainer-utils:/usr/local/bin/devcontainer-utils \
            mcr.microsoft.com/devcontainers/base:ubuntu \
              bash -x /workspace/.devcontainer/features/src/pulumi-tools/install-pulumi.sh

      # - name: "Testing ${{ matrix.feature }}"
      #   id: test_feature
      #   run: |
      #     devcontainer features test \
      #       --skip-scenarios \
      #       --project-folder .devcontainer/features \
      #       --features ${{ matrix.feature }} \
      #       --base-image devcontainer

  test-scenarios:
    needs: [detect-changes]
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        feature: ${{ fromJson(needs.detect-changes.outputs.features) }}
    steps:
      - name: "Checkout"
        id: checkout
        uses: actions/checkout@v3

      - name: "Install devcontainer CLI"
        id: install_devcontainer_cli
        run: npm install -g @devcontainers/cli

      - name: "Build Image"
        id: build_image
        uses: docker/build-push-action@v4
        with:
          file: .devcontainer/features/test/Dockerfile
          load: true
          tags: devcontainer

      - name: "Testing ${{ matrix.feature }} scenarios"
        id: test_feature
        run: |
          devcontainer features test \
            --project-folder .devcontainer/features \
            --features ${{ matrix.feature }} \
            --skip-autogenerated \
            --base-image devcontainer
