---
on: # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      component:
        required: true
        type: string
      terraform-version:
        default: latest
        required: false
        type: string

jobs:
  determine-workflow-mode:
    name: Determine Workflow Mode
    runs-on: ubuntu-latest
    outputs:
      mode: ${{ steps.determine_mode.outputs.mode }}
    steps:
      - name: Determine Mode
        id: determine_mode
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "mode=Apply" >>"${GITHUB_OUTPUT}"
          else
            echo "mode=Plan" >>"${GITHUB_OUTPUT}"
          fi

  terraform:
    needs: [determine-workflow-mode]
    name: ${{ needs.determine-workflow-mode.outputs.mode }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Prepare Environment
        id: prepare_environment
        shell: bash
        run: |
          workingDirectory=$(yq -e ".${{ inputs.component }}" .github/workflows/path-filter/terraform.yml | sed 's/.\{3\}$//')
          export workingDirectory

          echo "working-directory=${workingDirectory}" >>"${GITHUB_ENV}"

      - name: Configure AWS Credentials
        id: configure_aws_credentials
        uses: aws-actions/configure-aws-credentials@5fd3084fc36e372ff1fff382a39b10d03659f355 # v2.2.0
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::042130406152:role/GlobalGitHubActionAccess

      - name: Assume GlobalGitHubActionAdmin Role
        id: assume_global_github_action_admin_role
        uses: aws-actions/configure-aws-credentials@5fd3084fc36e372ff1fff382a39b10d03659f355 # v2.2.0
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::042130406152:role/GlobalGitHubActionAdmin
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
          role-skip-session-tagging: true

      - name: Retrieve GitHub Robot Token
        if: github.ref != 'refs/heads/main'
        id: retrieve_github_robot_token
        uses: aws-actions/aws-secretsmanager-get-secrets@022e8919774ecb75e8e375656d7b1898936ab878 # v1.0.4
        with:
          secret-ids: |
            GITHUB_ROBOT_TOKEN, github-token

      - name: Set up Terraform
        id: setup_terraform
        uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1 # v2.0.3
        with:
          terraform_version: ${{ inputs.terraform-version }}

      - name: Prepare Terraform
        id: terraform_prepare
        shell: bash
        run: |
          echo "TF_IN_AUTOMATION=true" >> ${GITHUB_ENV}

      - name: Initialise Terraform
        id: terraform_init
        shell: bash
        working-directory: ${{ env.working-directory }}
        run: |
          terraform init \
            -reconfigure \
            -upgrade \
            -no-color

      - name: Validate Terraform
        if: github.ref != 'refs/heads/main'
        id: terraform_validate
        working-directory: ${{ env.working-directory }}
        shell: bash
        run: |
          terraform validate -no-color

      - name: Terraform Static Analysis - Checkov
        if: github.ref != 'refs/heads/main'
        id: terraform_static_analysis_checkov
        uses: bridgecrewio/checkov-action@4e78331a460093edf2b3b5196200fcbc97fe56fa # v12.2425.0
        with:
          directory: ${{ env.working-directory }}
          framework: terraform
          quiet: true
          download_external_modules: true
          output_format: cli
        continue-on-error: true

      - name: Terraform Static Analysis - tfsec
        if: github.ref != 'refs/heads/main'
        id: terraform_static_analysis_tfsec
        uses: aquasecurity/tfsec-action@b466648d6e39e7c75324f25d83891162a721f2d6 # v1.0.3
        with:
          working_directory: ${{ env.working-directory }}
          additional_args: --no-colour --exclude-path ${{ env.working-directory }}/.terraform/modules --tfvars-file ${{ env.working-directory }}/terraform.tfvars
        continue-on-error: true

      # Commenting out until action has feature parity with its replacement, Trivy. Currently doesn't show the file name of finding, and doesn't allow for passing tfvars files
      # - name: Terraform Static Analysis - Trivy
      #   if: github.ref != 'refs/heads/main'
      #   id: terraform_static_analysis_trivy
      #   uses: aquasecurity/trivy-action@41f05d9ecffa2ed3f1580af306000f734b733e54 # 0.11.2
      #   with:
      #     scan-ref: ${{ env.working-directory }}
      #     scan-type: config
      #     format: table
      #     exit-code: 1
      #     skip-dirs: .terraform/modules
      #   continue-on-error: true

      - name: Plan Terraform
        id: terraform_plan
        working-directory: ${{ env.working-directory }}
        shell: bash
        run: |
          terraform plan -input=false -no-color
        continue-on-error: true

      - name: Comment on Pull Request
        if: github.event_name == 'pull_request'
        id: comment
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        with:
          script: |
            const output = ` ### Terraform Component üß±: \`${{ inputs.component }}\`
            #### Terraform Initialization ‚öôÔ∏è: \`${{ steps.terraform_init.outcome }}\`
            #### Terraform Validation ü§ñ: \`${{ steps.terraform_validate.outcome }}\`

            <details><summary>Validation Output</summary>

            \`\`\`\n
            ${{ steps.terraform_validate.outputs.stdout }}
            \`\`\`

            </details>

            #### Terraform Static Analysis üõÇ

            Checkov: \`${{ steps.terraform_static_analysis_checkov.outcome }}\`

            tfsec: \`${{ steps.terraform_static_analysis_tfsec.outcome }}\`

            #### Terraform Plan üìñ: \`${{ steps.terraform_plan.outcome }}\`

            <details><summary>Plan Output</summary>

            \`\`\`\n
            ${{ steps.terraform_plan.outputs.stdout }}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.working-directory }}\`, Workflow: \`${{ github.workflow }}\`*`;


            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            })

            const botComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('${{ inputs.component }}')
            })

            if (botComment) {
              github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output
              })
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
            }

      - name: Check for Static Analysis Override Label
        if: github.ref != 'refs/heads/main'
        id: check_for_static_analysis_override
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        with:
          result-encoding: string
          script: |
            const labels = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            })

            const overrideStaticAnalysis = labels.data.find(label => {
              return label.name === 'override-static-analysis'
            })

            if (overrideStaticAnalysis) {
              console.log('Found label')
              return "true"
            } else {
              console.log('Did not find label')
              return "false"
            }

      - name: Process Outcomes
        if: github.ref != 'refs/heads/main'
        id: process_outcomes
        shell: bash
        run: |
          failBuild=false

          if [[ "${{ steps.terraform_init.outcome }}" != "success" ]]; then
            export failBuild=true
            echo "FAIL: Terraform Initialisation" >>"${GITHUB_STEP_SUMMARY}"
          elif [[ "${{ steps.terraform_init.outcome }}" == "success" ]]; then
            echo "PASS: Terraform Initialisation" >>"${GITHUB_STEP_SUMMARY}"
          fi

          if [[ "${{ steps.terraform_validate.outcome }}" != "success" ]]; then
            export failBuild=true
            echo "FAIL: Terraform Validation" >>"${GITHUB_STEP_SUMMARY}"
          elif [[ "${{ steps.terraform_validate.outcome }}" == "success" ]]; then
            echo "PASS: Terraform Validation" >>"${GITHUB_STEP_SUMMARY}"
          fi

          if [[ "${{ steps.terraform_static_analysis_checkov.outcome }}" != "success" ]] && [[ "${{ github.actor }}" == "dependabot[bot]" ]]; then
            echo "PASS: Terraform Static Analysis - Checkov" >>"${GITHUB_STEP_SUMMARY}"
          elif [[ "${{ steps.terraform_static_analysis_checkov.outcome }}" != "success" ]] && [[ "${{ steps.check_for_static_analysis_override.outputs.result }}" == "false" ]]; then
            export failBuild=true
            echo "FAIL: Terraform Static Analysis - Checkov" >>"${GITHUB_STEP_SUMMARY}"
          elif [[ "${{ steps.terraform_static_analysis_checkov.outcome }}" != "success" ]] && [[ "${{ steps.check_for_static_analysis_override.outputs.result }}" == "true" ]]; then
            echo "OVERRIDDEN: Terraform Static Analysis - Checkov" >>"${GITHUB_STEP_SUMMARY}"
          elif [[ "${{ steps.terraform_static_analysis_checkov.outcome }}" == "success" ]]; then
            echo "PASS: Terraform Static Analysis - Checkov" >>"${GITHUB_STEP_SUMMARY}"
          fi

          if [[ "${{ steps.terraform_static_analysis_tfsec.outcome }}" != "success" ]] && [[ "${{ github.actor }}" == "dependabot[bot]" ]]; then
            echo "PASS: Terraform Static Analysis - tfsec" >>"${GITHUB_STEP_SUMMARY}"
          elif [[ "${{ steps.terraform_static_analysis_tfsec.outcome }}" != "success" ]] && [[ "${{ steps.check_for_static_analysis_override.outputs.result }}" == "false" ]]; then
            export failBuild=true
            echo "FAIL: Terraform Static Analysis - tfsec" >>"${GITHUB_STEP_SUMMARY}"
          elif [[ "${{ steps.terraform_static_analysis_tfsec.outcome }}" != "success" ]] && [[ "${{ steps.check_for_static_analysis_override.outputs.result }}" == "true" ]]; then
            echo "OVERRIDDEN: Terraform Static Analysis - tfsec" >>"${GITHUB_STEP_SUMMARY}"
          elif [[ "${{ steps.terraform_static_analysis_tfsec.outcome }}" == "success" ]]; then
            echo "PASS: Terraform Static Analysis - tfsec" >>"${GITHUB_STEP_SUMMARY}"
          fi

          if [[ "${{ steps.terraform_plan.outcome }}" != "success" ]]; then
            export failBuild=true
            echo "FAIL: Terraform Plan" >>"${GITHUB_STEP_SUMMARY}"
          elif [[ "${{ steps.terraform_plan.outcome }}" == "success" ]]; then
            echo "PASS: Terraform Plan" >>"${GITHUB_STEP_SUMMARY}"
          fi

          if [[ "${failBuild}" == "true" ]]; then
            exit 1
          fi

      - name: Automatic Approval for Dependabot
        if: (github.event_name == 'pull_request' && github.actor == 'dependabot[bot]' && contains(steps.terraform_plan.outputs.stdout, 'No changes. Your infrastructure matches the configuration.') || contains(steps.terraform_plan.outputs.stdout, 'No changes. Infrastructure is up-to-date.'))
        id: automatic_approval
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        with:
          github-token: ${{ env.GITHUB_ROBOT_TOKEN }}
          script: |
            github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              body: 'Automatically approving as no changes were detected in the Terraform plan, and the pull request was raised by Dependabot.\n\n@dependabot merge ü§ñ ü§ù ü§ñ',
              event: 'APPROVE'
            })

      - name: Apply Terraform
        if: github.ref == 'refs/heads/main'
        id: terraform_apply
        working-directory: ${{ env.working-directory }}
        shell: bash
        run: |
          terraform apply -input=false -auto-approve -no-color
