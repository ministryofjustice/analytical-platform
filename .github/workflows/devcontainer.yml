---
name: Dev Container

on: # yamllint disable-line rule:truthy
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/devcontainer.yml
      - .github/workflows/path-filter/devcontainer.yml
      - .devcontainer/**
  push:
    branches:
      - main
    paths:
      - .github/workflows/devcontainer.yml
      - .github/workflows/path-filter/devcontainer.yml
      - .devcontainer/**

permissions: read-all

env:
  DEVCONTAINER_CLI_VERSION: 0.40.0

jobs:
  detect-changes:
    if: github.ref != 'refs/heads/main'
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      features: ${{ steps.detect_changes.outputs.changes }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Detect changes
        id: detect_changes
        uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50 # v2.11.1
        with:
          filters: .github/workflows/path-filter/devcontainer.yml

  test:
    if: (github.ref == 'refs/heads/main') && (needs.detect-changes.outputs.features != '[]')
    needs: [detect-changes]
    name: Test
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        feature: ${{ fromJson(needs.detect-changes.outputs.features) }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Install devcontainer CLI
        id: install_devcontainer_cli
        run: npm install -g @devcontainers/cli@${{ env.DEVCONTAINER_CLI_VERSION }}

      - name: Build Image
        id: build_image
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825 # v4.1.1
        with:
          file: .devcontainer/features/test/Dockerfile
          load: true
          tags: devcontainer

      - name: Testing ${{ matrix.feature }}
        id: test_feature
        run: |
          devcontainer features test \
            --skip-scenarios \
            --project-folder .devcontainer/features \
            --features ${{ matrix.feature }} \
            --base-image devcontainer

  test-scenarios:
    if: (github.ref == 'refs/heads/main') && (needs.detect-changes.outputs.features != '[]')
    needs: [detect-changes]
    name: Test Scenarios
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        feature: ${{ fromJson(needs.detect-changes.outputs.features) }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Install devcontainer CLI
        id: install_devcontainer_cli
        run: npm install -g @devcontainers/cli@${{ env.DEVCONTAINER_CLI_VERSION }}

      - name: Build Image
        id: build_image
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825 # v4.1.1
        with:
          file: .devcontainer/features/test/Dockerfile
          load: true
          tags: devcontainer

      - name: Testing ${{ matrix.feature }} scenarios
        id: test_feature_scenarios
        run: |
          devcontainer features test \
            --project-folder .devcontainer/features \
            --features ${{ matrix.feature }} \
            --skip-autogenerated \
            --base-image devcontainer

  build:
    if: github.ref != 'refs/heads/main'
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Install devcontainer CLI
        id: install_devcontainer_cli
        run: npm install -g @devcontainers/cli@${{ env.DEVCONTAINER_CLI_VERSION }}

      - name: Set up Docker QEMU
        if: ${{ matrix.platform == 'linux/arm64' }}
        id: setup_docker_qemu
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2.2.0

      - name: Set up Docker Buildx
        if: ${{ matrix.platform == 'linux/arm64' }}
        id: setup_docker_buildx
        uses: docker/setup-buildx-action@4c0219f9ac95b02789c1075625400b2acbff50b1 # v2.9.1

      - name: Build Image
        id: build_image
        run: |
          devcontainer build \
            --platform ${{ matrix.platform }} \
            --image-name ghcr.io/ministryofjustice/data-platform-devcontainer \
            --workspace-folder . \
            --config .devcontainer/devcontainer-build.json

  publish:
    # if: github.ref == 'refs/heads/main'
    name: Publish
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      packages: write
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Install devcontainer CLI
        id: install_devcontainer_cli
        run: npm install -g @devcontainers/cli@${{ env.DEVCONTAINER_CLI_VERSION }}

      - name: Set up Docker QEMU
        id: setup_docker_qemu
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2.2.0

      - name: Set up Docker Buildx
        id: setup_docker_buildx
        uses: docker/setup-buildx-action@4c0219f9ac95b02789c1075625400b2acbff50b1 # v2.9.1

      - name: Login to GitHub Container Registry
        id: ghcr_login
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Image
        id: publish_image
        run: |
          devcontainer build \
            --image-name "ghcr.io/ministryofjustice/data-platform-devcontainer:latest" \
            --push "true" \
            --platform "linux/amd64,linux/arm64" \
            --workspace-folder . \
            --config .devcontainer/devcontainer-build.json
