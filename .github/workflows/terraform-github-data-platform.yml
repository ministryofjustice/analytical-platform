---
name: Terraform - GitHub - Data Platform

on: # yamllint disable-line rule:truthy
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/terraform-github.yml
      - terraform/github/data-platform/**
      - terraform/github/modules/**
      - configuration/ap_migration_apps.json
  push:
    branches:
      - main
    paths:
      - .github/workflows/terraform-github.yml
      - terraform/github/data-platform/**
      - terraform/github/modules/**
      - configuration/ap_migration_apps.json

permissions: read-all

jobs:
  user-validation:
    if: github.event_name == 'pull_request'
    name: User Validation
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/github/data-platform
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Configure AWS Credentials
        id: configure_aws_credentials
        uses: aws-actions/configure-aws-credentials@5fd3084fc36e372ff1fff382a39b10d03659f355 # v2.2.0
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::042130406152:role/GlobalGitHubActionAccess
          role-session-name: githubactionsrolesession

      - name: Assume GlobalGitHubActionAdmin Role
        id: assume_global_github_action_admin_role
        uses: aws-actions/configure-aws-credentials@5fd3084fc36e372ff1fff382a39b10d03659f355 # v2.2.0
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::042130406152:role/GlobalGitHubActionAdmin
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
          role-skip-session-tagging: true

      - name: Get AWS Secrets
        id: get_aws_secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@022e8919774ecb75e8e375656d7b1898936ab878 # v1.0.4
        with:
          secret-ids: |
            GH_TOKEN, github-token

      - name: Set up Terraform
        id: setup_terraform
        uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1 # v2.0.3
        with:
          terraform_version: 1.4.5
          terraform_wrapper: false

      - name: Prepare Terraform
        id: terraform_prepare
        shell: bash
        run: |
          echo "TF_IN_AUTOMATION=true" >> ${GITHUB_ENV}

      - name: Initialise
        id: terraform_init
        shell: bash
        run: |
          terraform init \
            -reconfigure \
            -upgrade \
            -no-color

      - name: Validate Users
        run: |
          bash ../../../scripts/github/user-validation/main.sh
        env:
          GH_TOKEN: ${{ env.GH_TOKEN }}

  terraform:
    needs: [user-validation]
    if: |
      always() &&
      (needs.user-validation.result == 'success' || needs.user-validation.result == 'skipped')
    name: Terraform
    permissions:
      contents: read
      id-token: write
    uses: ./.github/workflows/reusable-terraform.yml
    with:
      working-directory: terraform/github/data-platform
      aws-role-to-assume: arn:aws:iam::042130406152:role/GlobalGitHubActionAccess
      terraform-version: 1.4.5
      terraform-backend-config-role: arn:aws:iam::042130406152:role/GlobalGitHubActionAdmin
    secrets: inherit
