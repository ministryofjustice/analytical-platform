---
name: Container images

on:
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/container-images.yml
      - .github/workflows/path-filter/container-images.yml
      - container-images/**
  push:
    branches:
      - main
    paths:
      - .github/workflows/container-images.yml
      - .github/workflows/path-filter/container-images.yml
      - container-images/**

permissions: read-all

jobs:
  detect-changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.detect_changes.outputs.changes }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: Detect changes
        id: detect_changes
        uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50 # v2.11.1
        with:
          filters: .github/workflows/path-filter/container-images.yml

  build:
    if: ${{ needs.detect-changes.outputs.images != '[]' }}
    needs: [detect-changes]
    name: Build image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        images: ${{ fromJson(needs.detect-changes.outputs.images) }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: Install cosign
        id: install_cosign
        uses: sigstore/cosign-installer@c3667d99424e7e6047999fb6246c0da843953c65 # v3.0.1

      - name: Prepare build paramerters
        id: prepare
        run: |
          echo "name=$(jq -r '.name' container-images/${{ matrix.images }}/config.json)" >> ${GITHUB_ENV}
          echo "version=$(jq -r '.version' container-images/${{ matrix.images }}/config.json)" >> ${GITHUB_ENV}

      - name: Build image
        id: build
        uses: docker://cgr.dev/chainguard/apko@sha256:a2438e282d6a5ca7de8b6e5343b452f003ac148def536bbd4bacc357ee41c58a # 0.7.1
        with:
          args: build container-images/${{ matrix.images }}/apko.yml ${{ env.name }}:${{ env.version }} ${{ env.name }}-${{ env.version }}.tar

      - name: Load image
        id: load_image
        run: |
          docker load -i ${{ env.name }}-${{ env.version }}.tar

      - name: Scan image (anchore)
        id: scan_image_anchore
        uses: anchore/scan-action@dafbc97d7259af88b61bd260f2fde565d0668a72 # v3.3.4
        with:
          image: ${{ env.name }}:${{ env.version }}-amd64

      - name: Upload SARIF (anchore)
        id: upload_sarif_anchore
        uses: github/codeql-action/upload-sarif@32dc499307d133bb5085bae78498c0ac2cf762d5 # v2.2.5
        with:
          sarif_file: ${{ steps.scan_image_anchore.outputs.sarif }}

      - name: Scan image (trivy)
        id: scan_image_trivy
        uses: aquasecurity/trivy-action@1f0aa582c8c8f5f7639610d6d38baddfea4fdcee # v0.9.2
        with:
          image-ref: ${{ env.name }}:${{ env.version }}-amd64
          format: sarif
          output: trivy.sarif

      - name: Upload SARIF (trivy)
        id: upload_sarif_trivy
        uses: github/codeql-action/upload-sarif@32dc499307d133bb5085bae78498c0ac2cf762d5 # v2.2.5
        with:
          sarif_file: trivy.sarif

      - name: Scan SBOM
        id: scan_sbom
        uses: anchore/scan-action@dafbc97d7259af88b61bd260f2fde565d0668a72 # v3.3.4
        with:
          sbom: sbom-x86_64.spdx.json

      - name: Publish SBOM
        id: publish_sbom
        uses: anchore/sbom-action/publish-sbom@07978da4bdb4faa726e52dfc6b1bed63d4b56479 # v0.13.3
        with:
          sbom-artifact-match: sbom-x86_64.spdx.json

      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        id: docker_login
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag image
        if: github.ref == 'refs/heads/main'
        id: tag_image
        run: |
          docker tag \
            ${{ env.name }}:${{ env.version }}-amd64 \
            ministryofjustice/data-platform-${{ env.name }}:${{ env.version }}
          docker tag \
            ${{ env.name }}:${{ env.version }}-amd64 \
            ministryofjustice/data-platform-${{ env.name }}:latest

      - name: Push image
        if: github.ref == 'refs/heads/main'
        id: push_image
        run: |
          docker push ministryofjustice/data-platform-${{ env.name }}:${{ env.version }}
          docker push ministryofjustice/data-platform-${{ env.name }}:latest

      - name: Sign image
        if: github.ref == 'refs/heads/main'
        id: sign_image
        run: |
          cosign sign --yes ministryofjustice/data-platform-${{ env.name }}:${{ env.version }}
          cosign sign --yes ministryofjustice/data-platform-${{ env.name }}:latest
